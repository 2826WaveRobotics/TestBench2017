// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "BenchDrive.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

BenchDrive::BenchDrive() : Subsystem("BenchDrive") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    rearLeft1 = RobotMap::benchDriveRearLeft1;
    rearRight1 = RobotMap::benchDriveRearRight1;
    frontLeft1 = RobotMap::benchDriveFrontLeft1;
    frontRight1 = RobotMap::benchDriveFrontRight1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	frontRight1->SetInverted(true);
	rearRight1->SetInverted(true);
}

void BenchDrive::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	// SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void BenchDrive::TankDrive(double TankLeft, double TankRight)
{
	rearLeft1->Set(TankLeft);
	frontLeft1->Set(TankLeft);
	frontRight1->Set(TankRight);
	rearRight1->Set(TankRight);

}
